clc, clear
load Adventure;
fprintf('Welcome to The Elder Scrolls 6 Beta.')
%Name = input('\nWhat do you want to name your character?\n', 's');
%Q1 =  input('\You want your name to be %s?',Name)

%Determines the difficulty of the game
Diffn = 0;
while Diffn == 0
Diffs = input('\nDo you want to play on Easy, Medium, or Hard?\n','s');
if strcmp(Diffs, 'Easy')
    Diffn = 1;
elseif strcmp(Diffs, 'Medium')
    Diffn = 2;
elseif strcmp(Diffs, 'Hard')
    Diffn = 3;
else 
    disp('Error')
end
end
fprintf('Use WASD to move.')

%% player stats 
Ph = 100;
Pa = 1;
Pd = 1;
Ps = 1;
Pl = 1;
%Player Health, Attack, Defense, Speed, and Level
%% Spawners
for k = 1:Diffn*2
    for l = 1:2
    Monste(l,k)= randi(10);
    end
end
%Randomly generates coordinates for the monsters depending on difficulty
%level
Swor = [randi(10);randi(10)];
Shiel = [randi(10);randi(10)];
Boot = [randi(10);randi(10)];
%Randomly generates coordinates for the items
for n = 1:4-Diffn
    for m = 1:2
        Healt(n,m) = randi(10);
    end
end
%Randomly generates coordinates for the health depending on the the
%difficulty

for k = 1:Diffn*2
    a = Monste(1,k);
    b = Monste(2,k);
    World{a,b} = Monster
end

for k = 1:(4-Diffn)
a = Healt(k,1);
b = Healt(k,2);
    World{a,b} = Health
end
%Plots monsters and health

World{Swor(1),Swor(2)} = Sword;
World{Shiel(1),Shiel(2)} = Shield;
World{Boot(1),Boot(2)} = Boots;
World{10,10} = Door
World{1,1} = Player
imshow([World{1,:};World{2,:};World{3,:};World{4,:};World{5,:};World{6,:};
  World{7,:};World{8,:};World{9,:};World{10,:}]);
%Plots items and displays the world
%% Movement

Play = [1,1];
WinCon = [0,0];
%Sets up player location and win conditions

while WinCon(1) + WinCon(2) ~= 2
%Runs the game while the player is not at the exit
if Play(1) == 10
    WinCon(1) = 1;
else 
    WinCon(1) = 0;
end
if Play(2) == 10
    WinCon(2) = 1;
else 
    WinCon(2) = 0;
end
%Sets up player location and win conditions
%Player movement beginning
World{Play(1),Play(2)} = Blank
Pm = input('\nWhich direction do you want to move?','s');   
if Play(1) == 1 | Play(2) == 1
    if strcmp(Pm, 'w') & Play(1) == 1
        Play(1) = Play(1) + 1;
    elseif strcmp(Pm, 'a') & Play(2) == 1
        Play(2) = Play(2) + 1;
    else
        pause(0)
    end
elseif Play(1) ~= 1 & Play(2) ~= 1
    pause(0)
end
if Play(1) == 10 | Play(2) == 10
    if strcmp(Pm, 's') & Play(1) == 10
        Play(1) = Play(1) - 1;
    elseif strcmp(Pm, 'd') & Play(2) == 10
        Play(2) = Play(2) - 1;
    else
        pause(0)
    end
elseif Play(1) ~= 10 & Play(2) ~= 10
    pause(0)
end
%Stops the player from leaving the board  
    if strcmp(Pm, 'w')
        Play(1) = Play(1) - 1;
    elseif strcmp(Pm, 's')
        Play(1) = Play(1) + 1;
    elseif strcmp(Pm, 'a') 
        Play(2) = Play(2) - 1;
    elseif strcmp(Pm, 'd')
        Play(2) = Play(2) + 1;
    end

%Moves the player's location
World{Play(1),Play(2)} = Player
%plots the player
%end player movement

%monster movement Begin
for k = 1:Diffn*2
    a = Monste(1,k);
    b = Monste(2,k);
    World{a,b} = Blank
end
%replaces the monsters old locations with blank squares

for k = 1:Diffn*2
    for l = 1:2
        if Monste(l,k) == 1
        Monste(l,k) = Monste(l,k) + (randi(2)-1)
        elseif Monste(l,k) == 10
        Monste(l,k) = Monste(l,k) + (randi(2)-2)
        else
        Monste(l,k) = Monste(l,k) + (randi(3)-2)
        end
    end
end
%randomly generates a path for the monsters

for k = 1:Diffn*2
    a = Monste(1,k);
    b = Monste(2,k);
    World{a,b} = Monster
end
%plots the new monsters


if Swor(1) == Play(1) & Swor(2) == Play(2)
   Pa = Pa + 5;
   Swor(1) = 10;
   Swor(2) = 10;
end
if Shiel(1) == Play(1) & Shiel(2) == Play(2)
   Pd = Pd + 5;
   Shiel(1) = 10;
   Shiel(2) = 10;
end
if Boot(1) == Play(1) & Boot(2) == Play(2)
   Ps = Ps + 1;
   Boot(1) = 10;
   Boot(2) = 10;
end
%When the player is at the same location as the non diffuculty dependent items, 
%the items will disappear from the UI and the player stats will improve

for k = 1:4-Diffn
    if Play(1) == Healt(k,1) & Play(2) == Healt(k,2)
        Ph = 100
        Healt(k,1) = 10
        Healt(k,2) = 10
    else
        pause(0)
    end
end
%Finds when the player is next to a health potion
%If they are, the player's health is put to 100
for k = 1:(4-Diffn)
a = Healt(k,1);
b = Healt(k,2);
    World{a,b} = Health
end
%puts the potion at (10,10), effectivly putting it out of play

World{Swor(1),Swor(2)} = Sword;
World{Shiel(1),Shiel(2)} = Shield;
World{Boot(1),Boot(2)} = Boots;
World{10,10} = Door;

imshow([World{1,:};World{2,:};World{3,:};World{4,:};World{5,:};World{6,:};
  World{7,:};World{8,:};World{9,:};World{10,:}]);

end
fprintf('You win')



